<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>docker</groupId>
  <artifactId>docker-test</artifactId>
  <version>1.0</version>

  <name>docker-test</name>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.8.RELEASE</version>
    <relativePath/>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>${artifactId}-${version}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!--<plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>
        <configuration>
          &lt;!&ndash;镜像名称&ndash;&gt;
          <imageName>springboottest</imageName>
          &lt;!&ndash;基础镜像，相当于Dockerfile里的from&ndash;&gt;
          <baseImage>java:8</baseImage>
          &lt;!&ndash;docker的地址&ndash;&gt;
          <dockerHost>http://localhost:2375</dockerHost>
          &lt;!&ndash;使用dockerfile 文件，即使用自己的创建的dockerfile文件&ndash;&gt;
         &lt;!&ndash; <dockerDirectory>app</dockerDirectory>&ndash;&gt;
          <entryPoint>["nohup","java", "-jar", "/${project.build.finalName}.jar","&amp;"]</entryPoint>
          <resources>
            <resource>
              &lt;!&ndash;target的目录 下面的el标签，都是maven内置的&ndash;&gt;
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              &lt;!&ndash;jar编译后的全名&ndash;&gt;
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>
        </configuration>
      </plugin>-->
    </plugins>
  </build>
</project>
